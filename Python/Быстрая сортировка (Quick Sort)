def partition(arr, low, high):
    """Разбивает массив на две части относительно опорного элемента."""
    pivot = arr[high]
    i = (low - 1)  # Индекс меньшего элемента

    for j in range(low, high):
        # Если текущий элемент меньше или равен опорному
        if arr[j] <= pivot:
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]

    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return i + 1


def quick_sort(arr, low, high):
    """Реализует алгоритм быстрой сортировки."""
    if low < high:
        # pi - это индекс разбиения, arr[pi] теперь на своем месте
        pi = partition(arr, low, high)

        # Отсортировать элементы до и после разбиения
        quick_sort(arr, low, pi - 1)
        quick_sort(arr, pi + 1, high)


def print_array(arr):
    """Выводит массив на консоль."""
    print(*arr)  # Выводим элементы массива в одну строку


# Пример использования
if __name__ == "__main__":
    array = [10, 7, 8, 9, 1, 5]

    print("Исходный массив:", end=" ")
    print_array(array)

    quick_sort(array, 0, len(array) - 1)

    print("Отсортированный массив:", end=" ")
    print_array(array)

